# python 基础数据类型

[TOC]


* Number（数字） 
* String（字符串） 
* List（列表） 
* Tuple（元组） 
* Sets（集合） 
* Dictionary（字典） 

---

## Number（数字）

**数字数据类型用于存储数值。它们是不可变数据类型。这意味着，更改数字数据类型的值会导致新分配对象。**

### 数字类型
* 整型(Int) - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。 
* 浮点型(float) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250） 
* 复数( (complex)) - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。 


### 数字定义
```python
int1 = 1
int2 = int(2)


float1 = 1.0
float2 = float(2) #2.0

complex1 = complex(3) #虚部为0
complex2 = complex(1,2) #1+2j
```

### 数字类型转换内置函数

**int：根据传入的参数创建一个新的整数**

    >>> int() #不传入参数时，得到结果0。
    0
    >>> int(3)
    3
    >>> int(3.6)
    3

**float：根据传入的参数创建一个新的浮点数**

    >>> float() #不提供参数的时候，返回0.0
    0.0
    >>> float(3)
    3.0
    >>> float('3')
    3.0

**complex：根据传入参数创建一个新的复数**

    >>> complex() #当两个参数都不提供时，返回复数 0j。
    0j
    >>> complex('1+2j') #传入字符串创建复数
    (1+2j)
    >>> complex(1,2) #传入数值创建复数
    (1+2j)


### 数学运算内置函数


**abs：求数值的绝对值**
    
    >>>abs(-2)  #2

**divmod：返回两个数值的商和余数**

    >>> divmod(5,2)
    (2, 1)
    >> divmod(5.5,2)
    (2.0, 1.5)

**max：返回可迭代对象中的元素中的最大值或者所有参数的最大值**
    
    >>> max(1,2,3) # 传入3个参数 取3个中较大者3
    >>> max('1234') # 传入1个可迭代对象，取其最大元素值
    '4'

    >>> max(-1,0) # 数值默认去数值较大者
    0
    >>> max(-1,0,key = abs) # 传入了求绝对值函数，则参数都会进行求绝对值后再取较大者
    -1
    
**min：返回可迭代对象中的元素中的最小值或者所有参数的最小值**
    
    >>> min(1,2,3) # 传入3个参数 取3个中较小者
    1
    >>> min('1234') # 传入1个可迭代对象，取其最小元素值
    '1'

    >>> min(-1,-2) # 数值默认去数值较小者
    -2
    >>> min(-1,-2,key = abs)  # 传入了求绝对值函数，则参数都会进行求绝对值后再取较小者
    -1

**pow：返回两个数值的幂运算值或其与指定整数的模值**

    >>> pow(2,3)
    >>> 2**3

    >>> pow(2,3,5)
    >>> pow(2,3)%5

**round：对浮点数进行四舍五入求值**

    >>> round(1.1314926,1)
    1.1
    >>> round(1.1314926,5)
    1.13149

**sum：对元素类型是数值的可迭代对象中的每个元素求和**
    
    # 传入可迭代对象
    >>> sum((1,2,3,4))
    10
    # 元素类型必须是数值型
    >>> sum((1.5,2.5,3.5,4.5))
    12.0
    >>> sum((1,2,3,4),-10)
    0

### 数学函数

#### math模块 常用方法
(略)

#### random模块 随机数  常用方法
(略)


### 缓冲池

** python 的内置数据类型，数值型，字符串，列表，字典等都会有自己的对象缓存池，
这样做的好处是，避免了频繁的申请内存，释放内存，这样会极大的降低应用程序的运行速度，还会造成大量的内存碎片。因此提供对象缓存机制是非常重要的。**

对于**-5 ~ 257 **范围内的数值, 创建后python 会将其加入缓存池当中，当再次使用时，则直接从缓存池中返回，而不需要申请内存，如果超出了这个范围的数值，则每次都需要申请内存。

----

## String（字符串）
**不可变数据类型**  
可以理解为**不可变的字符序列**

### 定义


### 内置函数


### 自有方法与属性

----

## 序列




### List（列表）




### Que (队列)


### Stack（栈）

### Tuple（元组）





----

## Sets（集合）






-----

## Dictionary（字典）







-----













